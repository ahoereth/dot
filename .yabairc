#!/usr/bin/env sh

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_shadow                float
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        1.0
yabai -m config window_border                on
yabai -m config window_border_width          1
yabai -m config window_border_radius         12
yabai -m config active_window_border_color   0xffdb7464  # 0xAARRGGBB
yabai -m config normal_window_border_color   0x000000FF  # 0xff555555
yabai -m config window_border_blur           off
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  0
yabai -m config bottom_padding               0
yabai -m config left_padding                 0
yabai -m config right_padding                0
yabai -m config window_gap                   0

# read -r -d '' action <<- 'EOF'
#     yabai -m query --spaces --display | \
#         jq -re 'map(select(."native-fullscreen" == 0)) | length > 1' \
#     && yabai -m query --spaces | \
#         jq -re 'map(select(."windows" == [] and ."focused" == 0).index) | reverse | .[] ' | \
#         xargs -I % sh -c 'yabai -m space % --destroy'
# EOF

read -r -d '' action <<- 'EOF'
yabai -m query --spaces --display | \
     jq -re 'map(select(."is-native-fullscreen" == false)) | length > 1' \
     && yabai -m query --spaces | \
          jq -re 'map(select(."windows" == [] and ."has-focus" == false).index) | reverse | .[] '
yabai -m query --spaces --display | \
     jq -re 'map(select(."is-native-fullscreen" == false)) | length > 1' \
     && yabai -m query --spaces | \
          jq -re 'map(select(."windows" == [] and ."has-focus" == false).index) | reverse | .[] ' | \
          xargs -I % sh -c 'yabai -m space % --destroy'
EOF
yabai -m signal --add event=space_changed action="${action}"

yabai -m signal --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || yabai -m window $YABAI_WINDOW_ID --toggle float'
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Authy Desktop$" manage=off
yabai -m rule --add app="^PrinterProxy$" manage=off

echo "yabai configuration loaded.."
